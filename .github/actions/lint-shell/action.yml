# Copyright 2025 The Authors (see AUTHORS file)
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: 'lint-shell'
description: 'Lint shell against the abcxyz style guide.'
inputs:
  target:
    description: 'File or directory containing shell files to lint.'
    type: 'string'
    default: '.'
  shellcheck_version:
    description: 'The version of actionlint to install and use.'
    type: 'string'
    default: '0.10.0'

runs:
  using: 'composite'
  steps:
    - name: 'Setup Shellcheck'
      uses: 'abcxyz/actions/.github/actions/setup-binary@main' # ratchet:exclude
      with:
        download_url: 'https://github.com/koalaman/shellcheck/releases/download/v${{ inputs.shellcheck_version }}/shellcheck-v${{ inputs.shellcheck_version }}.linux.x86_64.tar.xz'
        install_path: '${{ runner.temp }}/.shellcheck'
        binary_subpath: 'shellcheck-v${{ inputs.shellcheck_version }}/shellcheck'
        cache_key: '${{ runner.os }}_${{ runner.arch }}_shellcheck_${{ inputs.shellcheck_version }}'
        add_to_path: true

    - name: 'Add problem matcher'
      shell: 'bash'
      working-directory: '${{ inputs.target }}'
      run: |
        # NOTE: "code" must be a number. If you parse something other than a
        # number then the annotation will not show up in the files UI.
        cat > ./problem-matcher-lint-shell.json <<EOF
        {
          "problemMatcher": [
            {
              "owner": "abcxyz/actions/lint-shell",
              "pattern": [
                {
                  "regexp": "^(.+):(\\\\d+):(\\\\d*):?\\\\s+(note|warning|error):\\\\s(.+)$",
                  "file": 1,
                  "line": 2,
                  "column": 3,
                  "severity": 4,
                  "message": 5
                }
              ]
            }
          ]
        }
        EOF
        cat ./problem-matcher-lint-shell.json
        echo "::add-matcher::$(pwd)/problem-matcher-lint-shell.json"

    - name: 'Lint Shell'
      env:
        TARGET: '${{ inputs.target }}'
      shell: 'bash'
      run: |-
        # Note that only warning and error severity show up in the github files
        # page. So we replace 'style' and 'note' with 'warning' to make it show
        # up.
        #
        # 'Find all bash scripts even if they don't have an explicit extension.
        git ls-files | grep -E '^([^.]+|.*\.(sh|zsh|bash))$' | xargs file --mime-type \
          | grep "text/x-shellscript" | awk '{ print substr($1, 1, length($1)-1) }' \
          | xargs shellcheck \
            --check-sourced \
            --enable=all \
            --severity=style \
            --format=gcc \
            --color=never | sed -e 's/note:/warning:/g' -e 's/style:/warning:/g'
