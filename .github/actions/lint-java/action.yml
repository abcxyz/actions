# Copyright 2025 The Authors (see AUTHORS file)
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: 'lint-java'
description: 'Lint java against the abcxyz style guide.'
inputs:
  graalvm_java_version:
    description: 'The version of Java to install and use for the graalvm compiled google-java-format binary.'
    type: 'string'
    default: '21'
  graalvm_java_distribution:
    description: 'The distibution of Java to use for the graalvm compiled google-java-format binary.'
    type: 'string'
    default: 'graalvm-community'
  graalvm_cache:
    description: 'The java cache to use with graalvm.'
    type: 'string'
    default: 'maven'
  directory:
    description: 'Directory in which Java files reside.'
    type: 'string'
    default: '.'
  github_token:
    description: |-
      GitHub PAT or App Token to use for authentication.
    type: 'string'
    required: true

runs:
  using: 'composite'
  steps:
    - name: 'Set up GraalVM ${{ matrix.java }}'
      uses: 'graalvm/setup-graalvm@01ed653ac833fe80569f1ef9f25585ba2811baab' # ratchet:graalvm/setup-graalvm@v1
      with:
        java-version: '${{ inputs.graalvm_java_version }}'
        distribution: '${{ inputs.graalvm_java_distribution }}'
        github-token: '${{ inputs.github_token }}'
        cache: '${{ inputs.graalvm_cache }}'
        native-image-job-reports: 'true'

    - name: 'Download graalvm google-java-format binary'
      shell: 'bash'
      env:
        GOOGLE_JAVA_FORMAT_VERSION: '${{ inputs.google_java_format_version }}'
      run: |-
        BIN="${{ runner.tool_cache }}/google-java-format-${GOOGLE_JAVA_FORMAT_VERSION}"

        if [[ -x "${BIN}" ]]; then
          echo "Already installed!"
        else
          curl -sLfo "${BIN}" \
            https://github.com/google/google-java-format/releases/download/v${GOOGLE_JAVA_FORMAT_VERSION}/google-java-format_linux-x86-64
          chmod +x "${BIN}"
        fi

    - name: 'Check formatting'
      shell: 'bash'
      working-directory: '${{ inputs.directory }}'
      env:
        GOOGLE_JAVA_FORMAT_VERSION: '${{ inputs.google_java_format_version }}'
      run: |-
        shopt -s globstar

        "${{ runner.tool_cache }}/google-java-format-${GOOGLE_JAVA_FORMAT_VERSION}" -i **/*.java

        if [ -n "$(git status -s -uall)" ]; then
          echo "::error title=Java formatting::Detected unformatted Java"
          git -c color.ui=always diff
          exit 1
        fi
