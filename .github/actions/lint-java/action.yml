# Copyright 2025 The Authors (see AUTHORS file)
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: 'lint-java'
description: 'Lint java against the abcxyz style guide.'
inputs:
  java_version:
    description: 'The version of Java to install and use.'
    type: 'string'
    default: ''
  java_version_file:
    description: 'The version file to use to detect java versions.'
    type: 'string'
    default: '.java-version'
  java_distribution:
    description: 'The distibution of Java to use.'
    type: 'string'
    default: ''
  google_java_format_version:
    description: 'The version of google-java-format to use. This must be the full version with no leading "v" prefix.'
    type: 'string'
    default: '1.25.2'
  directory:
    description: 'Directory in which Java files reside.'
    type: 'string'
    default: '.'

runs:
  using: 'composite'
  steps:
    - name: 'Parse version info'
      id: 'java-info'
      if: |
        inputs.java_version_file == '.java-version'
      shell: 'bash'
      env:
        JAVA_VERSION_FILE: '${{ inputs.java_version_file }}'
      run: |
        # Eventually actions/setup-java should support parsing distribution
        # from the .java-version file.
        # https://github.com/actions/setup-java/issues/738
        version="$(cat "${JAVA_VERSION_FILE}")"
        if [[ "${version}" == temurin-* ]]; then
          echo "distribution=termurin" >> "${GITHUB_OUTPUTS}"
        elif [[ "${version}" == zulu-* ]]; then
          echo "distribution=zulu" >> "${GITHUB_OUTPUTS}"
        elif [[ "${version}" == adopt-openj9-* ]]; then
          echo "distribution=adopt-openj9" >> "${GITHUB_OUTPUTS}"
        elif [[ "${version}" == adopt-hotspot-* ]]; then
          echo "distribution=adopt-hotspot" >> "${GITHUB_OUTPUTS}"
        elif [[ "${version}" == adopt-* ]]; then
          echo "distribution=adopt" >> "${GITHUB_OUTPUTS}"
        elif [[ "${version}" == liberica-* ]]; then
          echo "distribution=liberica" >> "${GITHUB_OUTPUTS}"
        elif [[ "${version}" == microsoft-* ]]; then
          echo "distribution=microsoft" >> "${GITHUB_OUTPUTS}"
        elif [[ "${version}" == corretto-* ]]; then
          echo "distribution=corretto" >> "${GITHUB_OUTPUTS}"
        elif [[ "${version}" == semeru-* ]]; then
          echo "distribution=semeru" >> "${GITHUB_OUTPUTS}"
        elif [[ "${version}" == oracle-* ]]; then
          echo "distribution=oracle" >> "${GITHUB_OUTPUTS}"
        elif [[ "${version}" == dragonwell-* ]]; then
          echo "distribution=dragonwell" >> "${GITHUB_OUTPUTS}"
        elif [[ "${version}" == sapmachine-* ]]; then
          echo "distribution=sapmachine" >> "${GITHUB_OUTPUTS}"
        elif [[ "${version}" == graalvm-* ]]; then
          echo "distribution=graalvm" >> "${GITHUB_OUTPUTS}"
        elif [[ "${version}" == jetbrains-* ]]; then
          echo "distribution=jetbrains" >> "${GITHUB_OUTPUTS}"
        fi

    - name: 'Setup Java'
      uses: 'actions/setup-java@c5195efecf7bdfc987ee8bae7a71cb8b11521c00' # ratchet:actions/setup-java@v4
      with:
        distribution: '${{ steps.java-info.outputs.distribution || inputs.java_distribution }}'
        java-version: '${{ inputs.java_version }}'
        java-version-file: '${{ inputs.java_version_file }}'

    - name: 'Download google-java-format'
      shell: 'bash'
      run: |-
        BIN='${{ runner.tool_cache }}/google-java-format-${{ inputs.google_java_format_version }}'

        if [[ -x "${BIN}" ]]; then
          echo "Already installed!"
        else
          curl -sLfo "${BIN}" \
            "https://github.com/google/google-java-format/releases/download/v${{ inputs.google_java_format_version }}/google-java-format-${{ inputs.google_java_format_version }}-all-deps.jar"
          chmod +x "${BIN}"
        fi

    - name: 'Check formatting'
      shell: 'bash'
      working-directory: '${{ inputs.directory }}'
      run: |-
        shopt -s globstar

        java -jar ${{ runner.tool_cache }}/google-java-format-${{ inputs.google_java_format_version }} -i **/*.java

        if [ -n "$(git status -s -uall)" ]; then
          echo "::error title=Java formatting::Detected unformatted Java"
          git -c color.ui=always diff
          exit 1
        fi
