# Copyright 2025 The Authors (see AUTHORS file)
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: 'lint-docker'
description: 'Lint docker against the abcxyz style guide.'
inputs:
  target:
    description: 'File or directory containing shell files to lint.'
    type: 'string'
    default: '.'
  hadolint_config_url:
    description: 'The URL to a hadolint config file. This is only used if no file is found in the local directory.'
    type: 'string'
    default: 'https://raw.githubusercontent.com/abcxyz/actions/main/.hadolint.yml'
  hadolint_version:
    description: 'The version of hadolint to install and use.'
    type: 'string'
    default: '2.12.0'

runs:
  using: 'composite'
  steps:
    - name: 'Setup Hadolint'
      uses: 'abcxyz/actions/.github/actions/setup-binary@main' # ratchet:exclude
      with:
        download_url: 'https://github.com/hadolint/hadolint/releases/download/v${{ inputs.hadolint_version }}/hadolint-Linux-x86_64'
        install_path: '${{ runner.temp }}/.hadolint'
        binary_subpath: 'hadolint-Linux-x86_64'
        cache_key: '${{ runner.os }}_${{ runner.arch }}_hadolint_${{ inputs.hadolint_version }}'
        add_to_path: true
        destination_subpath: 'hadolint'

    - name: 'Lint (download default configuration)'
      id: 'load-default-config'
      if: |-
        ${{ hashFiles('.hadolint.yaml', '.hadolint.yml') == '' }}
      shell: 'bash'
      env:
        HADOLINT_CONFIG_URL: '${{ inputs.hadolint_config_url }}'
      run: |-
        # Create a unique output file outside of the checkout.
        HADOLINT_CONFIG_YAML="${RUNNER_TEMP}/${GITHUB_SHA:0:7}.hadolint.yml"

        # Download the file, passing in authentication to get a higher rate
        # limit: https://docs.github.com/en/rest/overview/resources-in-the-rest-api?apiVersion=2022-11-28#rate-limits-for-requests-from-github-actions
        curl "${HADOLINT_CONFIG_URL}" \
          --silent \
          --fail \
          --location \
          --header "Authorization: Token ${{ github.token }}" \
          --output "${HADOLINT_CONFIG_YAML}"

        # Save the result to an output.
        echo "::debug::Wrote configuration file to ${HADOLINT_CONFIG_YAML}"
        echo "output-file=${HADOLINT_CONFIG_YAML}" >> "${GITHUB_OUTPUT}"

    - name: 'Add problem matcher'
      shell: 'bash'
      working-directory: '${{ inputs.target }}'
      run: |
        cat > ./problem-matcher.json <<EOF
        {
          "problemMatcher": [
            {
              "owner": "abcxyz/actions",
              "pattern": [
                {
                  "regexp": "^(.+):(\\\\d+)\\\\s(.+)\\\\s(error|warning|info):\\\\s(.+)$",
                  "file": 1,
                  "line": 2,
                  "code": 3,
                  "severity": 4,
                  "message": 5
                }
              ]
            }
          ]
        }
        EOF
        cat ./problem-matcher.json
        echo "::add-matcher::$(pwd)/problem-matcher.json"

    - name: 'Lint (default configuration)'
      if: |-
        ${{ hashFiles('.hadolint.yaml', '.hadolint.yml') == '' }}
      shell: 'bash'
      working-directory: '${{ inputs.target }}'
      env:
        OUTPUT_FILE: '${{ steps.load-default-config.outputs.output-file }}'
      run: |
        git ls-files | grep -E '(dockerfile|Dockerfile)' | xargs hadolint -c "${OUTPUT_FILE}" --format=tty --no-color

    - name: 'Lint (custom configuration)'
      if: |-
        ${{ hashFiles('.hadolint.yaml', '.hadolint.yml') != '' }}
      shell: 'bash'
      working-directory: '${{ inputs.target }}'
      run: |-
        git ls-files | grep -E '(dockerfile|Dockerfile)' | xargs hadolint --format=tty --no-color
